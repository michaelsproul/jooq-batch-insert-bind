/**
 * This class is generated by jOOQ
 */
package thing.jooq.tables.records;


import com.google.gson.JsonElement;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Row1;
import org.jooq.impl.TableRecordImpl;

import thing.jooq.tables.TestTable;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TestTableRecord extends TableRecordImpl<TestTableRecord> implements Record1<JsonElement> {

    private static final long serialVersionUID = -439605710;

    /**
     * Setter for <code>public.test_table.json_column</code>.
     */
    public TestTableRecord setJsonColumn(JsonElement value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.test_table.json_column</code>.
     */
    public JsonElement getJsonColumn() {
        return (JsonElement) get(0);
    }

    // -------------------------------------------------------------------------
    // Record1 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row1<JsonElement> fieldsRow() {
        return (Row1) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row1<JsonElement> valuesRow() {
        return (Row1) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<JsonElement> field1() {
        return TestTable.TEST_TABLE.JSON_COLUMN;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonElement value1() {
        return getJsonColumn();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestTableRecord value1(JsonElement value) {
        setJsonColumn(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TestTableRecord values(JsonElement value1) {
        value1(value1);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TestTableRecord
     */
    public TestTableRecord() {
        super(TestTable.TEST_TABLE);
    }

    /**
     * Create a detached, initialised TestTableRecord
     */
    public TestTableRecord(JsonElement jsonColumn) {
        super(TestTable.TEST_TABLE);

        set(0, jsonColumn);
    }
}
